# Updated from https://github.com/alexfayers/image-to-excel/blob/main/tox.ini

# For distributed tests, call tox with `-n NUMBER` arguments
# Use `pyproject.toml` as single-source of truth for dependency specification
# Supported versions based on SPEC 0 (https://scientific-python.org/specs/spec-0000/)

[tox]
minversion = 3.24
envlist = lint, py310, py311, py312
isolated_build = True


[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312


[testenv]
description = Run tests
changedir = {toxinidir}
setenv =
    SOURCEDIR = source/untitledpythonproject
deps =
    -r {toxinidir}/requirements-test.txt
commands =
    pytest -vv --cov untitledpythonproject --cov-report xml


[testenv:lint]
description = Perform static analysis, style, and type checks
changedir = {toxinidir}
deps =
    -r {toxinidir}/requirements-dev.txt
    -r {toxinidir}/requirements-types.txt
commands =
    - pre-commit run --all-files  # Run all pre-commit hooks, ignoring failures
    pre-commit run --all-files  # Re-run all pre-commit hooks. If any fail, exit with error
    mypy --install-types --non-interactive --cache-dir="{envdir}/mypy_cache" --config-file="{toxinidir}/pyproject.toml" "{toxinidir}" 


[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/latest/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
	clean: python -c "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('*.py[co]')]"
	clean: python -c "import pathlib, shutil; [shutil.rmtree(p) for p in pathlib.Path('.').rglob('__pycache__')]"
	clean: python -c "import pathlib, shutil; [shutil.rmtree(p) for p in pathlib.Path('.').rglob('*.egg-info')]"
	clean: python -c "import pathlib, shutil; [shutil.rmtree(p) if pathlib.Path(p).exists() else None for p in ['.pytest_cache', '.mypy_cache']]"
	clean: python -c "import pathlib, shutil; [shutil.rmtree(p) if pathlib.Path(p).exists() else None for p in ['build', 'dist']]"

    build: python -m build


[testenv:docs]
description = docs: Use Sphinx to generate documentation
setenv =
    {[testenv]setenv}
    DOCSDIR = {toxinidir}/docs
deps =
    -r {toxinidir}/requirements-docs.txt
commands =
    sphinx-apidoc -f -o "{env:DOCSDIR}/source/" "{env:SOURCEDIR}/"
    sphinx-build -M html "{env:DOCSDIR}/source/" "{env:DOCSDIR}/build/"


[testenv:release]
description = Build a new tag and push it to the remote repository
skip_install = True
deps =
	-r {toxinidir}/requirements-release.txt
setenv =
    PYTHONUTF8=1
    GITCHANGELOG_CONFIG_FILENAME = .gitchangelog.rc
passenv =
    HOME
allowlist_externals =
    {toxinidir}/scripts/release.sh
commands =
    {toxinidir}/scripts/release.sh {posargs:version_type} {posargs:pypi_token}